{"version":3,"sources":["pages/Home.js","pages/DriveList.js","pages/Status.js","App.js","serviceWorker.js","index.js"],"names":["http_conf","withCredentials","headers","useStyles","makeStyles","theme","root","marginTop","spacing","marginBottom","google_button","icon","marginRight","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","Home","classes","history","useHistory","useEffect","axios","get","then","res","data","running","push","catch","error","console","log","Box","className","Container","maxWidth","Typography","component","variant","align","color","gutterBottom","paragraph","Grid","container","justify","item","Button","onClick","result","window","location","href","String","DriveList","useState","folders","setFolders","selectedIndex","setSelectedIndex","list","List","aria-label","map","ListItem","button","key","id","selected","event","index","ListItemIcon","ListItemText","primary","name","process_url","disabled","Status","filesList","setFilesList","folderName","setFolderName","currentFile","setCurrentFile","progress","setProgress","progressArr","currentFileKey","currentProgress","progressArray","setProgressArray","progArr","useProgress","getStatus","current_file","folder_name","files_list","setInterval","LinearProgress","value","display","flexDirection","minHeight","main","footer","type","grey","Copyright","Link","Date","getFullYear","App","CssBaseline","AppBar","position","Toolbar","noWrap","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.143c6e58.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport { Box, Button } from \"@material-ui/core\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nconst backend_url = 'http://refoto.appspot.com/do_authorize';\nconst status_url = 'http://refoto.appspot.com/get_status';\n\nconst http_conf = {\n    withCredentials: true,\n    headers: {\n        // \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Headers\": \"Authorization\",\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS, PUT, PATCH, DELETE\" ,\n        \"Content-Type\": \"application/json;charset=UTF-8\"\n    }};\n \n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        // display: 'flex',\n        // alignItems: 'center',\n        // justifyContent: 'center',\n        marginTop: theme.spacing(2),\n        marginBottom : theme.spacing(3),\n    },\n    google_button: {\n    },\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\nfunction Home() {\n    const classes = useStyles();\n    let history = useHistory();\n\n    useEffect(()=>{testStatus()}, []);\n\n    function testStatus() {\n        axios.get(status_url, http_conf)\n            .then(res => {\n                const result = res.data;\n                if(result.running === 'True') {\n                    history.push(\"/status\");\n                }\n            }).catch(function (error) {\n                // handle error\n                console.log(error);\n            });\n    }\n\n    function authorize() {\n        axios.get(backend_url, http_conf)\n             .then(res => {\n                const result = res.data;\n                window.location.href = String(result);\n            }).catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n    }\n\n    return (\n        <Box className={classes.root}>\n            {/* Hero unit */}\n            <div className={classes.heroContent}>\n                <Container maxWidth=\"sm\">\n                    <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                        Bem-vindo ao ReFoto!\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                        Seu maravilhoso restaurador autom√°tico de fotos antigas\n                    </Typography>\n                    <div className={classes.heroButtons}>\n                        <Grid container spacing={2} justify=\"center\">\n                            <Grid item>\n                                <Button className={classes.google_button}\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={authorize}\n                                >\n                                    Restaurar √°lbum do meu Google Drive\n                                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button variant=\"outlined\" color=\"primary\">\n                                    Enviar fotos a partir do meu computador\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Container>\n            </div>\n            {/* End hero unit */}\n        </Box>\n    );\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport FolderIcon from '@material-ui/icons/Folder';\n\n\nconst getContent_url = 'http://refoto.appspot.com/list_drive_files';\nconst process_url = 'http://refoto.appspot.com/process_folder';\n\nconst http_conf = {\n    withCredentials: true,\n    headers: {\n        // \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Headers\": \"Authorization\",\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS, PUT, PATCH, DELETE\" ,\n        \"Content-Type\": \"application/json;charset=UTF-8\"\n    }};\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom : theme.spacing(3),\n    },\n}));\n\nfunction DriveList() {\n    const [folders, setFolders] = useState([]);\n    const [selectedIndex, setSelectedIndex] = useState(null );\n\n    const classes = useStyles();\n    let history = useHistory();\n\n    const handleListItemClick = (event, index) => {\n        setSelectedIndex(index);\n    };\n\n    useEffect(()=>{getContent()}, []);\n\n    function getContent() {\n        axios.get(getContent_url, http_conf)\n        .then(res => {\n            const result = res.data;\n            if(result.running === 'True') {\n                history.push(\"/status\");\n            } else {\n                setFolders(result.list);\n            }\n        }).catch(function (error) {\n            // handle error\n            console.log(error);\n        });\n    }\n\n    function process() {\n        if(selectedIndex !== null) {\n            axios.get(process_url+'/'+selectedIndex, http_conf)\n                .then(res => {\n                    const result = res.data;\n                    if(result.running === 'True'){\n                        history.push(\"/status\");\n                    } else {\n                        console.log('erro!');\n                    }\n                }).catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h4\">\n                Escolha aqui uma das pastas do seu Google Drive:\n            </Typography>\n\n            <Typography variant=\"subtitle\">\n                Depois clique no bot√£o \"restaurar\" (no final da p√°gina) para que todas as fotos\n                contidas nesta pasta sejam restauradas automaticamente.\n            </Typography>\n\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n                {folders.map(item => (\n                    <ListItem\n                        button\n                        key={item.id}\n                        selected={selectedIndex === item.id}\n                        onClick={event => handleListItemClick(event, item.id)}\n                    >\n                        <ListItemIcon>\n                            <FolderIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={item.name} />\n                    </ListItem>\n                    ))}\n            </List>\n\n            <Button variant=\"contained\" color=\"primary\"\n                    onClick={process}\n                    disabled={selectedIndex === null}>\n                Restaurar!\n            </Button>\n        </div>\n    );\n}\n\nexport default DriveList;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport PhotoIcon from \"@material-ui/icons/Photo\";\n\n\nconst status_url = 'http://refoto.appspot.com/get_status';\nconst filelist_url = 'http://refoto.appspot.com/get_filelist';\nconst cancel_url = 'http://refoto.appspot.com/cancel_processing';\n\nconst http_conf = {\n    withCredentials: true,\n    headers: {\n        // \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Headers\": \"Authorization\",\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS, PUT, PATCH, DELETE\" ,\n        \"Content-Type\": \"application/json;charset=UTF-8\"\n    }};\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom : theme.spacing(3),\n    },\n}));\n\nfunction useProgress(filesList, currentFileKey, currentProgress) {\n    const [progressArray, setProgressArray] = useState([]);\n\n    useEffect(() => {\n        let progArr = [];\n        filesList.map((item, key) => {\n            if(currentFileKey < key) {\n                progArr.push(0);\n            } else if(currentFileKey > key) {\n                progArr.push(100);\n            } else if(currentFileKey === key) {\n                progArr.push(currentProgress);\n            }\n        });\n        setProgressArray(progArr);\n    }, [currentFileKey, currentProgress]);\n\n    return progressArray;\n}\n\n\nfunction Status() {\n    const [filesList,   setFilesList]   = useState([]);\n    const [folderName,  setFolderName]  = useState('');\n    const [currentFile, setCurrentFile] = useState(0);\n    const [progress,    setProgress]    = useState(0);\n\n    const classes = useStyles();\n    let history = useHistory();\n\n    const progressArr = useProgress(filesList, currentFile, progress);\n\n\n    function getFileList() {\n        axios.get(filelist_url, http_conf)\n            .then(res => {\n                const result = res.data;\n                if (result.running === 'False') {\n                    history.push(\"/\");\n                } else if (result.running === 'True') {\n                    setFolderName(result.folder_name);\n                    setFilesList(result.files_list);\n                }\n            }).catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n    }\n\n    useEffect(() => {\n        getFileList();\n    }, []);\n\n\n    function getStatus() {\n        axios.get(status_url, http_conf)\n            .then(res => {\n                const result = res.data;\n                if(result.running === 'False') {\n                    history.push(\"/\");\n                } else {\n                    setCurrentFile(result.current_file);\n                    setProgress(result.progress)\n                }\n            }).catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n    }\n\n    useEffect(() => {\n        getStatus();\n        setInterval(()=>{getStatus()}, 1000);\n    }, []);\n\n    function cancelOperation() {\n        axios.get(cancel_url, http_conf)\n            .then(res => {\n                const result = res.data;\n                if(result.running === 'False') {\n                    history.push(\"/\");\n                }\n            }).catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <Typography variant=\"h4\">\n                Seus arquivos est√£o sendo processados...\n            </Typography>\n            <Typography variant=\"subtitle\">\n                Quando terminar, todos ser√£o salvos na pasta: {folderName}_resultado.\n            </Typography>\n\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n                {filesList.map((item, key) => (\n                    <ListItem\n                        key={item.id}\n                    >\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={item.name} />\n                        <LinearProgress variant=\"determinate\" value={progressArr[key]} />\n                    </ListItem>\n                ))}\n            </List>\n\n            <Button variant=\"contained\"\n                    onClick={cancelOperation} >\n                Cancelar\n            </Button>\n        </div>\n    );\n}\n\nexport default Status;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n  // {Link as RtLink}\n} from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box'\n\nimport Home from './pages/Home';\nimport DriveList from './pages/DriveList';\nimport Status from './pages/Status';\n\n// import logo from './logo.svg';\n// import './App.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    backgroundColor: 'white',\n\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  main: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    // backgroundColor: theme.palette.background.paper,\n    // padding: theme.spacing(6),\n    padding: theme.spacing(3, 2),\n    marginTop: 'auto',\n    backgroundColor:\n        theme.palette.type === 'dark' ? theme.palette.grey[800] : theme.palette.grey[100],\n  },\n}));\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright ¬© '}\n      <Link color=\"inherit\" href=\"https://refoto.com.br/\">\n        ReFoto\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Router>\n      <Box className={classes.root}>\n        <CssBaseline />\n\n        {/* Top Menu */}\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <CameraIcon className={classes.icon} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              ReFoto!\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        {/* Main Block */}\n        <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/drive\">\n              <DriveList />\n            </Route>\n            <Route path=\"/status\">\n              <Status />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Container>\n\n        {/* Footer */}\n        <footer className={classes.footer}>\n          <Container maxWidth=\"sm\">\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n              ReFoto\n            </Typography>\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n              Desenvolvido por: Rodrigo Werneck Franco\n            </Typography>\n            <Copyright />\n          </Container>\n        </footer>\n        {/* End footer */}\n      </Box>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}